# Inspired by: https://github.com/sheepkiller/kafka-manager-docker/blob/master/docker-compose.yml
#      and by: https://github.com/deviantony/docker-elk/blob/master/docker-compose.yml
version: '3'
services:

  zookeeper:
    build: zookeeper/
    ports:
      - "2181"
    networks:
      - mq

  kafka:
    build: kafka/
    ports:
      - "9092:9092"
    networks:
      - mq
    environment:
      - KAFKA_ADVERTISED_HOST_NAME
      - KAFKA_BROKER_ID
      - KAFKA_ADVERTISED_PORT
      - KAFKA_CREATE_TOPICS=test:1:1,os-t1x-in:1:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_LOG_RETENTION_HOUS=1
      - KAFKA_MESSAGE_MAX_BYTES=10000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=10000000
      - KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS=60000
      - KAFKA_NUM_PARTITIONS=2
      - KAFKA_DELETE_RETENTION_MS=1000
    depends_on:
      - zookeeper

  kafka-manager:
    build: kafka-manager/
    ports:
      - "9000:9000"
    networks:
      - mq
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    depends_on:
      - zookeeper
      - kafka

  elasticsearch:
    build: elasticsearch/
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  logstash:
    build: logstash/
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
      - mq
    depends_on:
      - elasticsearch
      - kafka
      - zookeeper

  kibana:
    build: kibana/
    volumes:
      - ./kibana/config/:/usr/share/kibana/config
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:

  elk:
    driver: bridge
  mq:
    driver: bridge
