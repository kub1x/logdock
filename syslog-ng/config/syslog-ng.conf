@version: 3.11
# $Id$
#
# Syslog-ng default configuration file for Gentoo Linux

# https://bugs.gentoo.org/show_bug.cgi?id=426814
@include "scl.conf"

options {
	threaded(yes);
	chain_hostnames(no);

	# The default action of syslog-ng is to log a STATS line
	# to the file every 10 minutes.  That's pretty ugly after a while.
	# Change it to every 12 hours so you get a nice daily update of
	# how many messages syslog-ng missed (0).
	stats_freq(43200);
	# The default action of syslog-ng is to log a MARK line
	# to the file every 20 minutes.  That's seems high for most
	# people so turn it down to once an hour.  Set it to zero
	# if you don't want the functionality at all.
	mark_freq(3600);
};

#source s_system { system(); };

#source s_apache  { file("/var/log/apache2/access.log"); }; #TODO
#source s_openvpn { file("/var/log/openvpn.log"); }; #TODO
#source s_docker  { file("/var/log/docker.log"); }; #TODO
source s_logman  { file("/var/log/logman.log"); }; #TODO

#destination d_messages { file("/var/log/messages"); };

# By default messages are logged to tty12...
#destination console_all { file("/dev/tty12"); };
# ...if you intend to use /dev/console for programs like xconsole
# you can comment out the destination line above that references /dev/tty12
# and uncomment the line below.
#destination console_all { file("/dev/console"); };

## Kafka
# Template functions for JSON format
template-function t_json_syslog_os_t1x "$(format-json --pair type=os_t1x --pair version=1 --pair source.domain=t1x --pair source.syslog.host_from=$HOST --pair source.syslog.message=$MESSAGE --pair source.syslog.date=$ISODATE --pair source.origin.pid=$PID --pair source.name=$PROGRAM --pair source.syslog.facility=$FACILITY --pair source.syslog.priority=$PRIORITY)";

# Rewrite rules
filter f_empty_domain   { "${.SDATA.meta.domain}" == "" };
filter f_empty_type     { "${.SDATA.meta.type}" == "" };
filter f_empty_version  { "${.SDATA.meta.version}" == "" };

rewrite r_default_metadata {
    set("unknown"  value(".SDATA.meta.domain")     condition(filter(f_empty_domain)));
    set("unknown"  value(".SDATA.meta.type")       condition(filter(f_empty_type)));
    set("0"        value(".SDATA.meta.version")    condition(filter(f_empty_version)));
};

# Destinations to kafka
destination d_kafka_os_t1x {
    channel {
        destination  {
            kafka(
                # The client-lib-dir maybe not needed. The path was found using:
                # $ docker exec -it syslog-ng /bin/bash
                #    find / -type d -name 'java-modules'
                client-lib-dir("/usr/lib/syslog-ng/3.11/java-modules/:/opt/kafka/libs/")
                kafka-bootstrap-servers("kafka:9092")
                topic("os-t1x-in")
                template("$(t_json_syslog_os_t1x)")
            );
        };
    };
};

filter f_os_t1x { program("os_t1x"); };
filter f_not_os_t1x { not match("os_t1x" value(PROGRAM)); };

# Connnections for logs
log {
    #source      (s_system);
    #source      (s_docker);
    source      (s_logman);
    rewrite     (r_default_metadata);
    destination (d_kafka_os_t1x);
    flags       (flow-control);
};

# NO Internal log configuration
#source s_local {
#    internal();
#};
#
#destination d_file_log {
#    file ("/var/log/syslog-ng.log" create-dirs(yes));
#};
#
#log {
#    source      (s_local);
#    destination (d_file_log);
#    flags       (flow-control);
#};


#log { source(s_system); destination(d_messages); };
#log { source(s_system); destination(console_all); };
